% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{cache_directory}
\alias{cache_directory}
\alias{cache_info}
\alias{cache}
\title{OLSr Cache Management}
\usage{
cache_directory()

cache_info()

cache()
}
\value{
cache_directory() returns the character(1) path to the
location of the cache on disk.

\code{cache_info()} returns a tibble with columns summarizing
\itemize{
\item \code{file}: the file name of the cache entry. This is a hash, based
on the function and signature, of the cached object. It is not
easily possible to associate individual calls in \emph{R} to file
names.
\item \code{size} the size in bytes of the cached object.
\item \code{mtime}, \code{ctime}, \code{atime}: the modification, creation and
last-access time of the file.
}

\code{cache()} returns an object defined in the cachem package.
}
\description{
\code{cache_directory()} returns the on-disk location of
the cache used by OLSr.

\code{cache_info()} summarizes information about each file
in the cache.

\code{cache()} returns an object that can be used in cache
management.
}
\details{
OLSr uses an on-disk cache to improve performance and reliability.
Each query to the OLS server is cached on first use, so that
subsequent responses can be read from the local disk. This greatly
increases performance, and allows use of previously retrieved
resources when off-line.

A risk of using a cache is that the cache contains an 'old' version
of the response. Circumvent this risk by manually manipulating the
cache, e.g., removing objects that a known to be too old.

OLSr uses the memoise \url{https://CRAN.R-project.org/package=memoise}
and cachem \url{https://CRAN.R-project.org/package=cachem} packages to
implement the cache. The disk cache is implemented using cachem's
\code{cache_disk()} function using the default cache size (1 Gb) and
\code{"lsu"} ('least recently used') eviction policy. Objects remain in
the cache for 30 days.

The cache is created in a package-specific directory, located at
\code{cache_directory()}.

See the help page \code{?cache_disk} for information on using the object
returned by \code{cache()}.
}
\examples{
cache_directory()

cache_info()

## cache objects created in the last 24 hours
cache_info() |>
    filter(mtime > Sys.time() - 24 * 60 * 60)

\dontrun{
## remove the most recently modified object, forcing this to be recreated
file_name <-
    cache_info() |>
    arrange(desc(mtime)) |>
    slice(1) |>
    pull(file)
unlink(file.path(cache_directory(), file_name))
}

cache()

}
