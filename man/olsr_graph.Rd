% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/olsr_graph.R
\name{get_ancestors_graph}
\alias{get_ancestors_graph}
\alias{get_descendants_graph}
\alias{olsr_graph}
\alias{olsr_graph_ontology}
\alias{olsr_graph_ids}
\alias{olsr_graph_nodes}
\alias{olsr_graph_edges}
\alias{olsr_graph_as_visNetwork}
\alias{olsr_graph_as_igraph}
\alias{igraph_as_olsr_graph}
\alias{print.olsr_graph}
\title{Ancestor and Descendant Term Graphs}
\usage{
get_ancestors_graph(ontology, ids, terms = NULL)

get_descendants_graph(ontology, ids, terms = NULL)

olsr_graph(relation, ontology, ids, edges, nodes)

olsr_graph_ontology(x)

olsr_graph_ids(x)

olsr_graph_nodes(x)

olsr_graph_edges(x)

olsr_graph_as_visNetwork(graph)

olsr_graph_as_igraph(graph)

igraph_as_olsr_graph(igraph)

\method{print}{olsr_graph}(x, ...)
}
\arguments{
\item{ontology}{character(1) name of ontology; must be present in
the \code{id} column of `get_ontologies().}

\item{ids}{character() of identifiers used to construct the graph.}

\item{terms}{a tibble from, e.g., \code{terms()}, containing a column
\code{obo_id} and additional columns to annotated nodes of
the returned graph.}

\item{relation}{character(1) type of graph, either \code{"ancestors"} or
\code{"descendants"}.}

\item{edges}{tibble() with columns \code{from} and \code{to}, containing OBO
identifiers at the start and end of each node in the graph.}

\item{nodes}{tibble() with column \code{obo_id}, one for each node in
the graph. Arbitrary additional columns are allowed.}

\item{x}{for \code{print.olsr_graph()}, an object of class \code{olsr_graph}.}

\item{graph}{an \code{olsr_graph} object.}

\item{igraph}{an object of class \code{igraph}, from the igraph package.}

\item{...}{for \code{print.olsr_graph()}, ignored.}
}
\value{
\code{get_ancestors_graph()} and \code{get_descendants_graph()} return an
\code{olsr_graph} object recording the ontology, ids, edges, and nodes
implied by the ancestor or descendant graph. Nodes are annotated
with information from \code{terms}, if available.

\code{olsr_graph()} returns an object of class \code{olsr_graph}.

\code{olsr_graph_as_visNetwork()} returns an object created by a
call to \code{visNetwork::visNetwork()}. This object can be used for
simple interactive visualization directly, or as input to
subsequent visNetwork formatting.

\code{olsr_graph_as_igraph()} returns an \code{igraph} object;
\code{igraph_as_olsr_graph()} returns an \code{olsr_graph} object.
}
\description{
\code{get_ancestors_graph()} and \code{get_descendants_graph()}
returns a graph representation of all ancestors or descendants
of term identifiers of interest.

\code{olsr_graph()} constructs an \code{olsr_graph} from
\emph{R} objects.

\code{olsr_graph_edges()}, \code{olsr_graph_nodes()},
\code{olsr_graph_ontology()}, and \code{olsr_graph_ids()} extract
elements of an \code{olsr_graph}.

\code{olsr_graph_as_visNetwork()} converts an \code{olsr_graph} to
the format used by the visNetwork package for interactive
visualization.

\code{olsr_graph_as_igraph()} and \code{igraph_as_olsr_graph()}
transform \code{olsr_graph} objects to and from \code{igraph} objects.
}
\details{
Ancestor and descendant graphs navigate from the ids of interest
via parents or children, recursively, until either the ontology
root or only leaf nodes remain. For descendant graphs, this can
involve hundreds or even thousands of calls to the OLS API, and can
be time consuming (e.g., a minute or so) on first invocation. API
calls are memoized, so fast on subsequent invocations.

\code{olsr_graph()} provides a simple representation to coordinate
information for ancestor and descendant graphs. The main purpose of
this class is as a 'way-point' for further analysis of the graph,
e.g., using the igraph package
\url{https://CRAN.R-project.org/package=igraph} for analytic work or
the visNetwork \url{https://CRAN.R-project.org/package=visNetwork} for
interactive visualization.

\code{olsr_graph_as_visNetwork()} renames the \code{obo_id} column of \code{nodes}
to \code{id}, consistent with visNetwork. The \code{id} column is copied to
\code{title}, so that it is used in mouse-over text; a \code{label} (the
short description of each term in the tibble returned by \code{terms()})
is used to label the node on the graph. Add a column \code{color} to
\code{nodes} to color individual nodes

\code{olsr_graph_as_igraph()} includes information on relation
(ancestors or descendants), ontology, and ids in the \code{igraph}
object as a graph-level attribute available with \code{graph_attr(ig, "olsr_graph")}. Workflows that use \code{olsr_graph_as_igraph()},
perform igraph manipulations, and then use \code{igraph_as_olsr_graph()}
generally preserve this information.
}
\examples{
cl <- get_terms("cl")
b_cell <- "CL:0000236"
anc <- get_ancestors_graph("cl", b_cell, cl)     # 11 nodes
anc

desc <- get_descendants_graph("cl", b_cell, cl)  # 64 nodes
desc

olsr_graph_ontology(anc)
olsr_graph_ids(anc)
olsr_graph_nodes(anc)
olsr_graph_edges(anc)

vis <- olsr_graph_as_visNetwork(anc)
if (interactive())   # visualize in RStudio  or browser
    vis

ig <- olsr_graph_as_igraph(anc)
ig
igraph_as_olsr_graph(ig)

}
