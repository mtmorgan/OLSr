[{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to OLSr","text":"Install OLSr GitHub using remotes package. Attach library current session. functions OLSr return results tibble, dplyr package also attached.","code":"if (!\"remotes\" in rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://cran.r-project.org\") remotes::install_github(\"mtmorgan/OLSr\") library(OLSr)"},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"ontologies","dir":"Articles","previous_headings":"","what":"Ontologies","title":"Introduction to OLSr","text":"Start discovering ontologies available OLS. vignette uses examples ontology title ‘Cell Ontology’, used CELLxGENE project classify cell types. Find record corresponding ontology, using glimpse() provide convenient view ontology description. Important information includes ‘id’ ontology (used many subsequent steps), ontology home page, number terms ontology. Information individual ontologies also available get_ontology(); record includes link ontology page OLS. home page good starting place understanding ontology visual interactive environment.","code":"onto <- get_ontologies() onto #> # A tibble: 250 × 31 #>    id        title          description version numberOfTerms numberOfProperties #>    <chr>     <chr>          <chr>       <chr>           <int>              <int> #>  1 ado       Alzheimer's D… Alzheimer'… 2.0.1            1963                186 #>  2 agro      Agronomy Onto… AgrO is an… NA               4162                293 #>  3 aism      Ontology for … The ontolo… 2023-0…          7443                547 #>  4 amphx     Amphioxus Dev… An ontolog… NA                403                 10 #>  5 apo       Ascomycete Ph… A structur… 2023-1…           619                 27 #>  6 apollo_sv Apollo Struct… An OWL2 on… 2023-0…          1691                366 #>  7 aro       Antibiotic Re… Antibiotic… NA               7105                 25 #>  8 bco       Biological Co… An ontolog… 2021-1…           253                472 #>  9 bfo       Basic Formal … The upper … NA                 35                 22 #> 10 bspo      Biological Sp… An ontolog… 2023-0…           169                236 #> # ℹ 240 more rows #> # ℹ 25 more variables: numberOfIndividuals <int>, languages <list>, #> #   loaded <chr>, updated <chr>, versionIri <chr>, namespace <chr>, #> #   preferredPrefix <chr>, homepage <chr>, mailingList <chr>, tracker <chr>, #> #   logo <lgl>, creators <lgl>, annotations <lgl>, fileLocation <chr>, #> #   oboSlims <lgl>, labelProperty <chr>, definitionProperties <list>, #> #   synonymProperties <list>, hierarchicalProperties <list>, baseUris <list>, … onto |>     filter(title == \"Cell Ontology\" ) |>     glimpse() #> Rows: 1 #> Columns: 31 #> $ id                     <chr> \"cl\" #> $ title                  <chr> \"Cell Ontology\" #> $ description            <chr> \"An ontology of cell types.\" #> $ version                <chr> \"2023-10-19\" #> $ numberOfTerms          <int> 16147 #> $ numberOfProperties     <int> 531 #> $ numberOfIndividuals    <int> 18 #> $ languages              <list> [\"en\"] #> $ loaded                 <chr> \"2023-11-30T14:00:19.698341744\" #> $ updated                <chr> \"2023-11-30T14:00:19.698341744\" #> $ versionIri             <chr> \"http://purl.obolibrary.org/obo/cl/releases/202… #> $ namespace              <chr> \"cl\" #> $ preferredPrefix        <chr> \"CL\" #> $ homepage               <chr> \"https://obophenotype.github.io/cell-ontology/\" #> $ mailingList            <chr> \"https://groups.google.com/g/cl_edit\" #> $ tracker                <chr> \"https://github.com/obophenotype/cell-ontology/… #> $ logo                   <lgl> NA #> $ creators               <lgl> NA #> $ annotations            <lgl> NA #> $ fileLocation           <chr> \"http://purl.obolibrary.org/obo/cl.owl\" #> $ oboSlims               <lgl> FALSE #> $ labelProperty          <chr> \"http://www.w3.org/2000/01/rdf-schema#label\" #> $ definitionProperties   <list> <NULL> #> $ synonymProperties      <list> <NULL> #> $ hierarchicalProperties <list> <NULL> #> $ baseUris               <list> <NULL> #> $ hiddenProperties       <list> <NULL> #> $ preferredRootTerms     <lgl> NA #> $ isSkos                 <lgl> FALSE #> $ allowDownload          <lgl> FALSE #> $ `_links`               <list> [[\"https://www.ebi.ac.uk/ols4/api/ontologies/cl… onto |>     filter(title == \"Cell Ontology\") |>     select(id, homepage, numberOfTerms) #> # A tibble: 1 × 3 #>   id    homepage                                      numberOfTerms #>   <chr> <chr>                                                 <int> #> 1 cl    https://obophenotype.github.io/cell-ontology/         16147 cl <- get_ontology(\"cl\") glimpse(cl) #> Rows: 1 #> Columns: 16 #> $ languages           <list> \"en\" #> $ lang                <chr> \"en\" #> $ ontologyId          <chr> \"cl\" #> $ loaded              <chr> \"2023-11-30T14:00:19.698341744\" #> $ updated             <chr> \"2023-11-30T14:00:19.698341744\" #> $ status              <chr> \"LOADED\" #> $ message             <chr> \"\" #> $ version             <chr> \"2023-10-19\" #> $ fileHash            <lgl> NA #> $ loadAttempts        <int> 0 #> $ numberOfTerms       <int> 16147 #> $ numberOfProperties  <int> 531 #> $ numberOfIndividuals <int> 18 #> $ config              <list> \"cl\" #> $ baseUris            <list> <NULL> #> $ `_links`            <list> [\"https://www.ebi.ac.uk/ols4/api/ontologies/cl?la…  cl |> pull(\"_links\") #> [[1]] #> [[1]]$href #> [1] \"https://www.ebi.ac.uk/ols4/api/ontologies/cl?lang=en\""},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"terms","dir":"Articles","previous_headings":"","what":"Terms","title":"Introduction to OLSr","text":"Terms central using ontology. Retrieve terms ‘cl’ ontology. default, terms defined ontology per se used; add argument all_ontologies = TRUE subsequent functions also include terms referenced ontologies. query can take several minutes complete first executed, result cached locally (discussed greater detail ) subsequent use quick. Glimpse second term get sense available information.","code":"terms <- get_terms(\"cl\") terms #> # A tibble: 2,734 × 13 #>    label  obo_id description iri   synonyms annotation   has_children short_form #>    <chr>  <chr>  <chr>       <chr> <list>   <list>       <lgl>        <chr>      #>  1 adren… CL:00… NA          http… <NULL>   <named list> FALSE        CL_0000109 #>  2 pepti… CL:00… A neuron t… http… <NULL>   <named list> FALSE        CL_0000110 #>  3 colum… CL:00… NA          http… <list>   <NULL>       FALSE        CL_0000112 #>  4 monon… CL:00… A vertebra… http… <NULL>   <named list> FALSE        CL_0000113 #>  5 surfa… CL:00… NA          http… <list>   <named list> FALSE        CL_0000114 #>  6 endot… CL:00… An endothe… http… <list>   <named list> TRUE         CL_0000115 #>  7 pione… CL:00… Pioneer ne… http… <NULL>   <named list> FALSE        CL_0000116 #>  8 CNS n… CL:00… NA          http… <NULL>   <NULL>       TRUE         CL_0000117 #>  9 baske… CL:00… Basket cel… http… <NULL>   <named list> TRUE         CL_0000118 #> 10 cereb… CL:00… Large intr… http… <list>   <named list> FALSE        CL_0000119 #> # ℹ 2,724 more rows #> # ℹ 5 more variables: in_subset <list>, obo_definition_citation <list>, #> #   obo_xref <list>, obo_synonym <list>, `_links` <list> terms |>     slice(1) |>     glimpse() #> Rows: 1 #> Columns: 13 #> $ label                   <chr> \"adrenergic neuron\" #> $ obo_id                  <chr> \"CL:0000109\" #> $ description             <chr> NA #> $ iri                     <chr> \"http://purl.obolibrary.org/obo/CL_0000109\" #> $ synonyms                <list> <NULL> #> $ annotation              <list> [[\"MESH:D059331\"]] #> $ has_children            <lgl> FALSE #> $ short_form              <chr> \"CL_0000109\" #> $ in_subset               <list> <NULL> #> $ obo_definition_citation <list> <NULL> #> $ obo_xref                <list> [[\"MESH\", \"D059331\", <NULL>, \"http://id.nlm.ni… #> $ obo_synonym             <list> <NULL> #> $ `_links`                <list> [[\"https://www.ebi.ac.uk/ols4/api/ontologies/c…"},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"hierarchical-data","dir":"Articles","previous_headings":"Terms","what":"Hierarchical data","title":"Introduction to OLSr","text":"columns terms table represent hieararchical (relational, 1:many mapping) data, e.g., in_subset column Individual terms apparently belong 0 subsets. R Data Science chapter hierarchical data suggests using tidyr functions unnest_wider() unnest_longer() expand data. Defined subsets number terms can computed Use filter() helper function summarizes subsets individual terms identify human_reference_atlas subset. Using vapply() (rather , e.g., sapply()) can considered best practice, filter function guaranteed return scalar logical value regardless input length. 486 terms human_reference_atlas subset.","code":"terms |>     select(label, obo_id, in_subset) #> # A tibble: 2,734 × 3 #>    label                         obo_id     in_subset  #>    <chr>                         <chr>      <list>     #>  1 adrenergic neuron             CL:0000109 <NULL>     #>  2 peptidergic neuron            CL:0000110 <NULL>     #>  3 columnar neuron               CL:0000112 <NULL>     #>  4 mononuclear phagocyte         CL:0000113 <list [1]> #>  5 surface ectodermal cell       CL:0000114 <NULL>     #>  6 endothelial cell              CL:0000115 <list [1]> #>  7 pioneer neuron                CL:0000116 <NULL>     #>  8 CNS neuron (sensu Vertebrata) CL:0000117 <NULL>     #>  9 basket cell                   CL:0000118 <list [1]> #> 10 cerebellar Golgi cell         CL:0000119 <NULL>     #> # ℹ 2,724 more rows terms |>     count(lengths(in_subset)) #> # A tibble: 4 × 2 #>   `lengths(in_subset)`     n #>                  <int> <int> #> 1                    0  2091 #> 2                    1   579 #> 3                    2    61 #> 4                    3     3 terms |>     select(in_subset, obo_id, label) |>     tidyr::unnest_longer(in_subset) #> # A tibble: 710 × 3 #>    in_subset                     obo_id     label                    #>    <chr>                         <chr>      <chr>                    #>  1 human_reference_atlas         CL:0000113 mononuclear phagocyte    #>  2 human_reference_atlas         CL:0000115 endothelial cell         #>  3 BDS_subset                    CL:0000118 basket cell              #>  4 BDS_subset                    CL:0000122 stellate neuron          #>  5 general_cell_types_upper_slim CL:0000125 glial cell               #>  6 human_reference_atlas         CL:0000125 glial cell               #>  7 human_reference_atlas         CL:0000127 astrocyte                #>  8 human_reference_atlas         CL:0000128 oligodendrocyte          #>  9 human_reference_atlas         CL:0000129 microglial cell          #> 10 eye_upper_slim                CL:0000132 corneal endothelial cell #> # ℹ 700 more rows terms |>     tidyr::unnest_longer(in_subset) |>     count(in_subset, sort = TRUE) #> # A tibble: 8 × 2 #>   in_subset                         n #>   <chr>                         <int> #> 1 human_reference_atlas           486 #> 2 location_grouping                65 #> 3 BDS_subset                       64 #> 4 blood_and_immune_upper_slim      36 #> 5 eye_upper_slim                   24 #> 6 general_cell_types_upper_slim    24 #> 7 added_for_HCA                     8 #> 8 _upper_level                      3 is_human_reference_atlas <- function(x)     vapply(x, \\(x) any(x == \"human_reference_atlas\"), logical(1))  human_reference_atlas <-     terms |>     filter(is_human_reference_atlas(in_subset))  human_reference_atlas #> # A tibble: 486 × 13 #>    label  obo_id description iri   synonyms annotation   has_children short_form #>    <chr>  <chr>  <chr>       <chr> <list>   <list>       <lgl>        <chr>      #>  1 monon… CL:00… A vertebra… http… <NULL>   <named list> FALSE        CL_0000113 #>  2 endot… CL:00… An endothe… http… <list>   <named list> TRUE         CL_0000115 #>  3 glial… CL:00… A non-neur… http… <list>   <named list> TRUE         CL_0000125 #>  4 astro… CL:00… A class of… http… <list>   <named list> TRUE         CL_0000127 #>  5 oligo… CL:00… A class of… http… <list>   <named list> TRUE         CL_0000128 #>  6 micro… CL:00… A central … http… <list>   <named list> TRUE         CL_0000129 #>  7 corne… CL:00… An hexagon… http… <NULL>   <named list> FALSE        CL_0000132 #>  8 fat c… CL:00… A fat-stor… http… <list>   <named list> TRUE         CL_0000136 #>  9 simpl… CL:00… NA          http… <NULL>   <named list> TRUE         CL_0000146 #> 10 melan… CL:00… A pigment … http… <list>   <named list> TRUE         CL_0000148 #> # ℹ 476 more rows #> # ℹ 5 more variables: in_subset <list>, obo_definition_citation <list>, #> #   obo_xref <list>, obo_synonym <list>, `_links` <list>"},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"individual-terms","dir":"Articles","previous_headings":"Terms","what":"Individual terms","title":"Introduction to OLSr","text":"Suppose interested B cells. Discover term labels starting \"B cell\", selecting useful fields display. subsequent work, create variable capturing obo_id \"B cell\" term. Slightly richer information individual terms available get_term(), using ontology id term obo_id keys.","code":"terms |>     filter(startsWith(label, \"B cell\")) |>     select(label, obo_id, description) #> # A tibble: 6 × 3 #>   label                                   obo_id     description                 #>   <chr>                                   <chr>      <chr>                       #> 1 B cell                                  CL:0000236 A lymphocyte of B lineage … #> 2 B cell, CD19-positive                   CL:0001201 A B cell that is CD19-posi… #> 3 B cell of appendix                      CL:0009032 A B cell that is located i… #> 4 B cell of medullary sinus of lymph node CL:0009045 A B cell found in the lymp… #> 5 B cell of anorectum                     CL:0009050 A B cell that is located i… #> 6 B cell zone reticular cell              CL:0009104 A fibroblastic reticular c… b_cell <- # \"CL:0000236\"     terms |>     filter(label == \"B cell\") |>     pull(obo_id) get_term(\"cl\", b_cell) |>     glimpse() #> Rows: 1 #> Columns: 22 #> $ obo_id                  <chr> \"CL:0000236\" #> $ label                   <chr> \"B cell\" #> $ description             <chr> \"A lymphocyte of B lineage that is capable of … #> $ iri                     <chr> \"http://purl.obolibrary.org/obo/CL_0000236\" #> $ lang                    <chr> \"en\" #> $ synonyms                <list> [\"B lymphocyte\", \"B-cell\", \"B-lymphocyte\"] #> $ annotation              <list> [[\"BTO:0000776\", \"CALOHA:TS-0068\", \"FMA:62869\"… #> $ ontology_name           <chr> \"cl\" #> $ ontology_prefix         <chr> \"CL\" #> $ ontology_iri            <chr> \"http://purl.obolibrary.org/obo/cl.owl\" #> $ is_obsolete             <lgl> FALSE #> $ term_replaced_by        <lgl> NA #> $ is_defining_ontology    <lgl> TRUE #> $ has_children            <lgl> TRUE #> $ is_root                 <lgl> FALSE #> $ short_form              <chr> \"CL_0000236\" #> $ in_subset               <list> [\"blood_and_immune_upper_slim\", \"general_cell_… #> $ obo_definition_citation <list> [[\"A lymphocyte of B lineage that is capable o… #> $ obo_xref                <list> [[\"BTO\", \"0000776\", <NULL>, \"http://purl.oboli… #> $ obo_synonym             <lgl> NA #> $ is_preferred_root       <lgl> FALSE #> $ `_links`                <list> [[\"https://www.ebi.ac.uk/ols4/api/ontologies/…"},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"relatives","dir":"Articles","previous_headings":"","what":"Relatives","title":"Introduction to OLSr","text":"functions get_parents() get_children() retrieve parent child terms individual terms; get_ancestors() get_descendants() return ancestors (root ontology) descendants (final term repreents leaf). B cells ancestors Ancestors descendants also contain in_subset column, groups easily filtered particlur subset, e.g., Terms without children descendants return tibble without rows.","code":"b_cell_ancestors <-     get_ancestors(\"cl\", b_cell) b_cell_ancestors |>     filter(is_human_reference_atlas(in_subset)) #> # A tibble: 3 × 14 #>   obo_id     label  description iri   synonyms annotation   has_children is_root #>   <chr>      <chr>  <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #> 1 CL:0000945 lymph… A lymphocy… http… <NULL>   <named list> TRUE         FALSE   #> 2 CL:0000542 lymph… A lymphocy… http… <NULL>   <named list> TRUE         FALSE   #> 3 CL:0000738 leuko… An achroma… http… <list>   <named list> TRUE         FALSE   #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list> get_children(\"cl\", \"CL:0002350\") #> # A tibble: 0 × 0 get_descendants(\"cl\", \"CL:0002350\") #> # A tibble: 0 × 0"},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"graphs","dir":"Articles","previous_headings":"","what":"Graphs","title":"Introduction to OLSr","text":"See Case Study: CELLxGENE Ontologies vignette illustration ancestors descendants graphs.","code":""},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"cache-management","dir":"Articles","previous_headings":"","what":"Cache management","title":"Introduction to OLSr","text":"OLSr uses -disk cache improve performance reliability. query OLS server cached first use, subsequent responses can read local disk. greatly increases performance, allows use previously retrieved resources -line. OLSr uses memoise cachem packages implement cache. disk cache implemented using cachem’s cache_disk() function using default cache size (1 Gb) \"lsu\" (‘least recently used’) eviction policy. Objects remain cache 30 days. risk using cache cache contains ‘old’ version response. Circumvent risk manually manipulating cache, e.g., removing objects known old. Use cache_directory() discover location cache. location follows conventions tools::R_user_dir(). files directory created OLSr. cache_info() convenience function summarize files cache. file represents response single memoised function call. file name hash function definition arguments; possible associate individual files specific function calls. Nonetheless, can informative identify files modified , say 1 day ago, recently modified file, perhaps total size files cache. special cases may useful invalidate cache using unlink() cache_directory(), invalidate particular records using unlink() file paths created using file.path(), cache_directory() individual file names cache_info().","code":"cache_directory() #> [1] \"/home/runner/.cache/R/OLSr\" cache_info() #> # A tibble: 99 × 5 #>    file         size mtime               ctime               atime               #>    <chr>       <dbl> <dttm>              <dttm>              <dttm>              #>  1 03d5b9987d…   808 2023-12-01 17:28:56 2023-12-01 17:28:56 2023-12-01 17:28:56 #>  2 06f6277f34…   154 2023-12-01 17:28:49 2023-12-01 17:28:49 2023-12-01 17:28:49 #>  3 09405ddbab…   768 2023-12-01 17:28:55 2023-12-01 17:28:55 2023-12-01 17:28:55 #>  4 09f0d0cb75…   719 2023-12-01 17:28:39 2023-12-01 17:28:39 2023-12-01 17:28:39 #>  5 1019c9f790…   154 2023-12-01 17:28:50 2023-12-01 17:28:50 2023-12-01 17:28:50 #>  6 1152719177… 12851 2023-12-01 17:28:36 2023-12-01 17:28:36 2023-12-01 17:28:36 #>  7 13938f8890…  6502 2023-12-01 17:29:04 2023-12-01 17:29:04 2023-12-01 17:29:04 #>  8 1d41ffdf45…   154 2023-12-01 17:28:54 2023-12-01 17:28:54 2023-12-01 17:28:54 #>  9 1d4576da3a…  1400 2023-12-01 17:28:46 2023-12-01 17:28:46 2023-12-01 17:28:46 #> 10 236f616b89…   154 2023-12-01 17:28:47 2023-12-01 17:28:47 2023-12-01 17:28:47 #> # ℹ 89 more rows ## cache objects modified in the last 24 hours cache_info() |>     filter(mtime > Sys.time() - 24 * 60 * 60) #> # A tibble: 99 × 5 #>    file         size mtime               ctime               atime               #>    <chr>       <dbl> <dttm>              <dttm>              <dttm>              #>  1 03d5b9987d…   808 2023-12-01 17:28:56 2023-12-01 17:28:56 2023-12-01 17:28:56 #>  2 06f6277f34…   154 2023-12-01 17:28:49 2023-12-01 17:28:49 2023-12-01 17:28:49 #>  3 09405ddbab…   768 2023-12-01 17:28:55 2023-12-01 17:28:55 2023-12-01 17:28:55 #>  4 09f0d0cb75…   719 2023-12-01 17:28:39 2023-12-01 17:28:39 2023-12-01 17:28:39 #>  5 1019c9f790…   154 2023-12-01 17:28:50 2023-12-01 17:28:50 2023-12-01 17:28:50 #>  6 1152719177… 12851 2023-12-01 17:28:36 2023-12-01 17:28:36 2023-12-01 17:28:36 #>  7 13938f8890…  6502 2023-12-01 17:29:04 2023-12-01 17:29:04 2023-12-01 17:29:04 #>  8 1d41ffdf45…   154 2023-12-01 17:28:54 2023-12-01 17:28:54 2023-12-01 17:28:54 #>  9 1d4576da3a…  1400 2023-12-01 17:28:46 2023-12-01 17:28:46 2023-12-01 17:28:46 #> 10 236f616b89…   154 2023-12-01 17:28:47 2023-12-01 17:28:47 2023-12-01 17:28:47 #> # ℹ 89 more rows  ## most recently modified file cache_info() |>     arrange(desc(mtime)) |>     slice(1) #> # A tibble: 1 × 5 #>   file          size mtime               ctime               atime               #>   <chr>        <dbl> <dttm>              <dttm>              <dttm>              #> 1 4e9479c7fcf…   154 2023-12-01 17:29:04 2023-12-01 17:29:04 2023-12-01 17:29:04  ## total cache size cache_info() |>     summarize(size = sum(size)) |>     pull(size) |>     structure(class = \"object_size\") |>     format(units = \"auto\") #> [1] \"4.1 Mb\""},{"path":"https://mtmorgan.github.io/OLSr/articles/a_introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Introduction to OLSr","text":"","code":"sessionInfo() #> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] OLSr_0.0.3       dplyr_1.1.4      BiocStyle_2.28.1 #>  #> loaded via a namespace (and not attached): #>  [1] jsonlite_1.8.7       compiler_4.3.2       BiocManager_1.30.22  #>  [4] BiocBaseUtils_1.2.0  tidyselect_1.2.0     stringr_1.5.1        #>  [7] tidyr_1.3.0          jquerylib_0.1.4      systemfonts_1.0.5    #> [10] textshaping_0.3.7    yaml_2.3.7           fastmap_1.1.1        #> [13] R6_2.5.1             rjsoncons_1.0.0.9200 generics_0.1.3       #> [16] curl_5.1.0           httr2_1.0.0          knitr_1.45           #> [19] tibble_3.2.1         bookdown_0.36        desc_1.4.2           #> [22] rprojroot_2.0.4      bslib_0.6.1          pillar_1.9.0         #> [25] rlang_1.1.2          utf8_1.2.4           cachem_1.0.8         #> [28] stringi_1.8.2        xfun_0.41            fs_1.6.3             #> [31] sass_0.4.7           memoise_2.0.1        cli_3.6.1            #> [34] withr_2.5.2          pkgdown_2.0.7        magrittr_2.0.3       #> [37] digest_0.6.33        rappdirs_0.3.3       lifecycle_1.0.4      #> [40] vctrs_0.6.4          evaluate_0.23        glue_1.6.2           #> [43] ragg_1.2.6           fansi_1.0.5          rmarkdown_2.25       #> [46] purrr_1.0.2          tools_4.3.2          pkgconfig_2.0.3      #> [49] htmltools_0.5.7"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"cellxgene","dir":"Articles","previous_headings":"","what":"CELLxGENE","title":"Case Study: CELLxGENE Ontologies","text":"central element CELLxGENE resource collection datasets. discovered programmatically using Data sets classified using ontologies exposed cellxgenedp user ‘facets’. insight ontologies used construct facets can gained extracting ontology ontology_term_id.","code":"db <- db() datasets(db) #> # A tibble: 1,142 × 31 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 1a38e762-24… 50671879-9cc9-4a9… bacccb91-066… <list>   <list> <list [1]>      #>  2 fc0ceb80-d2… d9e98068-b506-434… 1ca90a2d-294… <list>   <list> <list [1]>      #>  3 f67f2cfa-ba… 3361dba5-7446-4e3… 1ca90a2d-294… <list>   <list> <list [1]>      #>  4 eec3e37d-ed… 427e3253-c230-4d7… 1ca90a2d-294… <list>   <list> <list [1]>      #>  5 e8ac3386-31… 75338c67-3e91-428… 1ca90a2d-294… <list>   <list> <list [1]>      #>  6 de104f7e-14… 19cf2bd2-44ba-40a… 1ca90a2d-294… <list>   <list> <list [1]>      #>  7 d87f3f91-dc… b8883057-f9b4-41e… 1ca90a2d-294… <list>   <list> <list [1]>      #>  8 d2fc9880-e6… b0313650-ec3e-416… 1ca90a2d-294… <list>   <list> <list [1]>      #>  9 d0ea3ec4-0f… 806eaf48-4832-42e… 1ca90a2d-294… <list>   <list> <list [1]>      #> 10 c76098ba-ee… df8e241a-6cf8-43c… 1ca90a2d-294… <list>   <list> <list [1]>      #> # ℹ 1,132 more rows #> # ℹ 25 more variables: cell_count <int>, cell_type <list>, #> #   default_embedding <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <chr>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, … facets <- facets(db) facets #> # A tibble: 1,540 × 4 #>    facet label                          ontology_term_id     n #>    <chr> <chr>                          <chr>            <int> #>  1 assay 10x 3' v3                      EFO:0009922        546 #>  2 assay 10x 3' v2                      EFO:0009899        245 #>  3 assay Slide-seqV2                    EFO:0030062        223 #>  4 assay Visium Spatial Gene Expression EFO:0010961        108 #>  5 assay 10x 5' v1                      EFO:0011025         76 #>  6 assay Smart-seq2                     EFO:0008931         63 #>  7 assay 10x multiome                   EFO:0030059         61 #>  8 assay 10x 5' v2                      EFO:0009900         18 #>  9 assay sci-RNA-seq3                   EFO:0030028         15 #> 10 assay 10x 5' transcription profiling EFO:0030004         13 #> # ℹ 1,530 more rows facets |>     ## a small number of terms are not from any ontology; these do not     ## have a ':' in the ontology_term_id     filter(grepl(\":\", ontology_term_id, fixed = TRUE)) |>      ## for the remainder, discover the ontology from the ontology_term_id     mutate(ontology = tolower(sub(\"(.*):.*\", \"\\\\1\", ontology_term_id))) |>     count(facet, ontology) #> # A tibble: 12 × 3 #>    facet                   ontology      n #>    <chr>                   <chr>     <int> #>  1 assay                   efo          37 #>  2 cell_type               cl          757 #>  3 development_stage       hsapdv      173 #>  4 development_stage       mmusdv       51 #>  5 development_stage       uberon        5 #>  6 disease                 mondo        95 #>  7 disease                 pato          1 #>  8 organism                ncbitaxon     7 #>  9 self_reported_ethnicity hancestro    29 #> 10 sex                     pato          2 #> 11 tissue                  cl           12 #> 12 tissue                  uberon      366"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"annotating-the-disease-facet","dir":"Articles","previous_headings":"CELLxGENE","what":"Annotating the ‘disease’ facet","title":"Case Study: CELLxGENE Ontologies","text":"example work ‘disease’ facet, based ‘mondo’ ontology. Check ontology OLS. Retrieve terms ontology. 23678 terms ontology; small subset 96 terms used CELLxGENE datasets. Annotate disease facet information OLS. Note ‘normal’ term OBO id ‘PATO:0000461’ used CELLxGENE ‘mondo’ ontology; discover information term also retrieving ‘pato’ ontology OLS, using get_term(\"pato\", \"PATO:0000461\").","code":"\"mondo\" %in% get_ontologies()$id #> [1] TRUE mondo <- get_terms(\"mondo\") mondo #> # A tibble: 23,678 × 14 #>    label     obo_id description iri   synonyms annotation   has_children is_root #>    <chr>     <chr>  <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #>  1 AIPL1-re… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  2 glycogen… MONDO… Any glycog… http… <list>   <named list> FALSE        FALSE   #>  3 Asperger… MONDO… An inherit… http… <NULL>   <named list> TRUE         FALSE   #>  4 GUCY2D-r… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  5 RP2-rela… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  6 RDH5-rel… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  7 RLBP1-re… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  8 LCA5-rel… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #>  9 CNGB3-re… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #> 10 ATF6-rel… MONDO… A retinopa… http… <list>   <named list> TRUE         FALSE   #> # ℹ 23,668 more rows #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list> disease_terms <-     facets(db, \"disease\") |>     ## join based on identity between CxG's 'ontology_term_id' and     ## OLS's 'obo_id'     left_join(mondo, by = c(\"label\", ontology_term_id = \"obo_id\")) |>     ## for consistency with OLSr convention, rename the     ## 'ontology_term_id' to 'obo_id'     rename(obo_id = \"ontology_term_id\") disease_terms #> # A tibble: 96 × 16 #>    facet label obo_id     n description iri   synonyms annotation   has_children #>    <chr> <chr> <chr>  <int> <chr>       <chr> <list>   <list>       <lgl>        #>  1 dise… norm… PATO:…   966 NA          NA    <NULL>   <NULL>       NA           #>  2 dise… COVI… MONDO…    55 A disease … http… <list>   <named list> FALSE        #>  3 dise… deme… MONDO…    50 Loss of in… http… <list>   <named list> TRUE         #>  4 dise… diab… MONDO…    26 Progressiv… http… <list>   <named list> FALSE        #>  5 dise… myoc… MONDO…    26 Gross necr… http… <list>   <named list> TRUE         #>  6 dise… auto… MONDO…    24 Autosomal … http… <list>   <named list> TRUE         #>  7 dise… Alzh… MONDO…    15 A progress… http… <list>   <named list> TRUE         #>  8 dise… brea… MONDO…    13 A primary … http… <list>   <named list> TRUE         #>  9 dise… lung… MONDO…    11 A carcinom… http… <list>   <named list> TRUE         #> 10 dise… smal… MONDO…    11 Small cell… http… <list>   <named list> TRUE         #> # ℹ 86 more rows #> # ℹ 7 more variables: is_root <lgl>, short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list>"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"identifying-carcinoma-datasets","dir":"Articles","previous_headings":"CELLxGENE","what":"Identifying carcinoma datasets","title":"Case Study: CELLxGENE Ontologies","text":"CELLxGENE presents disease facet flat list terms, although datasets presented ad hoc filter group terms facilitate selection datasets containing samples multiple terms. principled approach use ontology identify terms interest. Suppose one interested datasets annotated disease term derived ‘carcinoma’; term appear disease facet. Find obo_id ‘carcinoma’ term mondo ontology, use find descendants. 987 terms descending ‘carcinoma’. Terms used disease facet facets_filter() function cellxgenedp makes easy identify datasets using terms derived ‘carcinoma’, perhaps addition filtering single type assay. 26 datasets. steps, visualization using CELLxGENE downloading datasets local analysis, described cellxgenedp vignette.","code":"carcinoma_id <-     mondo |>     filter(label == \"carcinoma\") |>     pull(\"obo_id\") carcinoma <- get_descendants(\"mondo\", carcinoma_id) disease_terms |>     inner_join(carcinoma) |>     select(obo_id, n, label, description) #> Joining with `by = join_by(label, obo_id, description, iri, synonyms, #> annotation, has_children, is_root, short_form, in_subset, #> obo_definition_citation, obo_xref, obo_synonym, `_links`)` #> # A tibble: 14 × 4 #>    obo_id            n label                             description             #>    <chr>         <int> <chr>                             <chr>                   #>  1 MONDO:0005061    11 lung adenocarcinoma               A carcinoma that arise… #>  2 MONDO:0008433    11 small cell lung carcinoma         Small cell lung cancer… #>  3 MONDO:0005086     9 renal cell carcinoma              A carcinoma that arise… #>  4 MONDO:0004989     7 breast carcinoma                  A carcinoma that arise… #>  5 MONDO:0024885     5 malignant ovarian serous tumor    An invasive malignant … #>  6 MONDO:0004970     3 adenocarcinoma                    A common cancer charac… #>  7 MONDO:0007763     3 nonpapillary renal cell carcinoma NA                      #>  8 MONDO:0005097     3 squamous cell lung carcinoma      A carcinoma arising fr… #>  9 MONDO:0005005     2 clear cell renal carcinoma        A malignant epithelial… #> 10 MONDO:0005233     2 non-small cell lung carcinoma     A group of at least th… #> 11 MONDO:0017885     1 chromophobe renal cell carcinoma  Chromophobe renal cell… #> 12 MONDO:0003050     1 lung large cell carcinoma         A poorly differentiate… #> 13 MONDO:0002120     1 neuroendocrine carcinoma          A malignant neuroendoc… #> 14 MONDO:0003573     1 pleomorphic carcinoma             A usually aggressive m… datasets_of_interest <-     datasets(db) |>     filter(         facets_filter(disease, \"ontology_term_id\", carcinoma$obo_id),         facets_filter(assay, \"label\", \"10x 3' v3\")     ) datasets_of_interest #> # A tibble: 26 × 31 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 232f6a5a-a0… b9a24331-5b4c-404… edb893ee-406… <list>   <list> <list [3]>      #>  2 1e6a6ef9-7e… 04929c2b-00af-4ad… edb893ee-406… <list>   <list> <list [3]>      #>  3 e3a7e927-26… f430ff40-4cf5-465… 4796c91c-9d8… <list>   <list> <lgl [1]>       #>  4 b252b015-b4… ef1b7fbb-789f-4d6… 4796c91c-9d8… <list>   <list> <lgl [1]>       #>  5 97d9238c-1a… 8105f639-52fc-481… 4796c91c-9d8… <list>   <list> <lgl [1]>       #>  6 44c93f2b-dd… dc79da35-ebd5-4dc… 4796c91c-9d8… <list>   <list> <lgl [1]>       #>  7 0caedec7-1c… 59ccd759-41c5-4d0… 4796c91c-9d8… <list>   <list> <lgl [1]>       #>  8 9f222629-9e… e4eeabe8-9852-48e… 6f6d381a-770… <list>   <list> <list [1]>      #>  9 d41f45c1-1b… ecd2961a-ad80-4e2… efd94500-1fd… <list>   <list> <lgl [1]>       #> 10 f64e1be1-de… aa0c4b0a-e79f-4d8… 62e8f058-9c3… <list>   <list> <lgl [1]>       #> # ℹ 16 more rows #> # ℹ 25 more variables: cell_count <int>, cell_type <list>, #> #   default_embedding <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <chr>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"ontologies-as-graphs","dir":"Articles","previous_headings":"","what":"Ontologies as graphs","title":"Case Study: CELLxGENE Ontologies","text":"can useful compute ontologies graphs. Use get_descendants_graph() retrieve, recursively, children ‘carcinoma’ term. step can take one two minutes, requires one API call per child. API calls memoised, process time consuming first time graph constructed. get_descendants_graph() returns olsr_graph object, contains information type graph (ancestors descendants), ontology used construct graph, ids used seed query. object can queried relevant components, instance annotation node","code":"carcinoma_graph <-     ## many calls to the OLS API; slow the first time     get_descendants_graph(\"mondo\", carcinoma_id, mondo) #> 0 relatives visited; 1 in queue #> 987 relatives visited; 0 in queue carcinoma_graph #> class: descendants_graph (988 nodes x 1578 edges) #> ontology: mondo #> ids (1): MONDO:0004993 olsr_graph_nodes(carcinoma_graph) #> # A tibble: 988 × 14 #>    obo_id     label description iri   synonyms annotation   has_children is_root #>    <chr>      <chr> <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #>  1 MONDO:000… carc… A malignan… http… <list>   <named list> TRUE         FALSE   #>  2 MONDO:085… lymp… A lymph no… http… <NULL>   <named list> FALSE        FALSE   #>  3 MONDO:004… glyc… A carcinom… http… <list>   <named list> TRUE         FALSE   #>  4 MONDO:004… inva… A carcinom… http… <list>   <named list> TRUE         FALSE   #>  5 MONDO:002… seco… A carcinom… http… <list>   <named list> TRUE         FALSE   #>  6 MONDO:002… carc… A carcinom… http… <list>   <named list> TRUE         FALSE   #>  7 MONDO:002… basa… A carcinom… http… <list>   <named list> TRUE         FALSE   #>  8 MONDO:002… muci… NA          http… <list>   <named list> TRUE         FALSE   #>  9 MONDO:002… comb… A malignan… http… <list>   <named list> TRUE         FALSE   #> 10 MONDO:001… chor… A malignan… http… <list>   <named list> TRUE         FALSE   #> # ℹ 978 more rows #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list>"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"graph-manipulation","dir":"Articles","previous_headings":"Ontologies as graphs","what":"Graph manipulation","title":"Case Study: CELLxGENE Ontologies","text":"988 nodes graph, dozen terms used CELLxGENE disease facet. like compute graph contains nodes involved paths ‘carcinoma’ term terms used disease facet. Start coercing olsr_graph object can used igraph package. olsr_graph_as_igraph() uses nodes carcinoma_graph vertex attributes, adds information relationship, ontology, id(s) graph attribute. Note OLS field obo_id translated igraph attribute name. Identifying subgraph ig corresponds (think!) calculating minimal directed Steiner tree. algorithm exist igraph R packages, must develop . solution defined directed_steiner_tree_approx() function find shortest paths ‘carcinoma’ node term disease facet, create subgraph containing just nodes. solution necessarily efficient, guarantee minimal tree, perhaps good enough size data encountered typical ontology. use algorithm, identify starting node relevant nodes disease facet, use inputs induced graph returned directed_steiner_tree_approx() includes vertex graph annotations input graph, can coerced olsr_graph object.","code":"ig <- olsr_graph_as_igraph(carcinoma_graph) igraph::vertex_attr_names(ig) #>  [1] \"name\"                    \"label\"                   #>  [3] \"description\"             \"iri\"                     #>  [5] \"synonyms\"                \"annotation\"              #>  [7] \"has_children\"            \"is_root\"                 #>  [9] \"short_form\"              \"in_subset\"               #> [11] \"obo_definition_citation\" \"obo_xref\"                #> [13] \"obo_synonym\"             \"_links\" igraph::graph_attr(ig, \"olsr_graph\") |>     str() #> List of 3 #>  $ relation: chr \"descendants\" #>  $ ontology: chr \"mondo\" #>  $ ids     : chr \"MONDO:0004993\" directed_steiner_tree_approx <-     function(graph, from, to) {     ## only an approximation! Use the union of all nodes on all     ## shortest paths from 'from' to each of 'to'      ## find shortest paths from node 'from' to each 'to' node     paths <- igraph::shortest_paths(ig, from, to)$vpath      ## identify nodes on the shortest paths     shortest_paths_nodes <-         lapply(paths, names) |>         unlist() |>         unique()      ## create an induced subgraph on the shortest-path nodes     igraph::induced_subgraph(ig, shortest_paths_nodes) } keep_ids <- c(     carcinoma_id,     intersect(disease_terms$obo_id, carcinoma$obo_id) ) ig1 <- directed_steiner_tree_approx(ig, head(keep_ids, 1), tail(keep_ids, -1)) ig1 #> IGRAPH a0e9ef1 DN-- 22 26 --  #> + attr: olsr_graph (g/x), name (v/c), label (v/c), description (v/c), #> | iri (v/c), synonyms (v/x), annotation (v/x), has_children (v/l), #> | is_root (v/l), short_form (v/c), in_subset (v/x), #> | obo_definition_citation (v/x), obo_xref (v/x), obo_synonym (v/x), #> | _links (v/x) #> + edges from a0e9ef1 (vertex names): #>  [1] MONDO:0004993->MONDO:0018364 MONDO:0004993->MONDO:0006406 #>  [3] MONDO:0004993->MONDO:0005206 MONDO:0004993->MONDO:0005138 #>  [5] MONDO:0004993->MONDO:0004989 MONDO:0004993->MONDO:0004970 #>  [7] MONDO:0004993->MONDO:0002120 MONDO:0004993->MONDO:0005232 #> + ... omitted several edges igraph_as_olsr_graph(ig1) #> class: descendants_graph (22 nodes x 26 edges) #> ontology: mondo #> ids (1): MONDO:0004993"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"graph-visualization","dir":"Articles","previous_headings":"Ontologies as graphs","what":"Graph visualization","title":"Case Study: CELLxGENE Ontologies","text":"22 nodes subgraph, enough convenient interactive visualization using visNetwork package. Use igraph commands color nodes used graph construction (‘’ ‘’ nodes) differently nodes required represent paths nodes. Use igraph ‘name’ attribute (OBO id) ‘title’ (.e., mouse-tool-tip). ‘label’ attribute used label nodes. Create interactive visualization using visIgraph(). ‘sugiyama’ layout appropriate directed tree-like graphs. idToLabel = FALSE ensures label vertex attribute, rather internal igraph id, used label nodes. Note graph interactive – zoom , mouse-select nodes, etc. flexible alternative visualization translate olsr_graph visNetwork object, transform visualization.","code":"## colorspace::qualitative_hcl(2, \"Set 2\") palette <- c(\"#ED90A4\", \"#00C1B2\") igraph::V(ig1)$color <- palette[ (igraph::V(ig1)$name %in% keep_ids) + 1L] igraph::V(ig1)$title <- igraph::V(ig1)$name # obo_id ## V(ig1)$label             # 'label' (short description) from OLS visNetwork::visIgraph(ig1, layout = \"layout_with_sugiyama\", idToLabel = FALSE) carcinoma_subgraph <- igraph_as_olsr_graph(ig1) olsr_graph_as_visNetwork(carcinoma_subgraph) |>     visNetwork::visEdges(arrows = \"to\") |>     visNetwork::visHierarchicalLayout(         sortMethod = \"directed\",         direction = \"LR\"     )"},{"path":"https://mtmorgan.github.io/OLSr/articles/b_case_study_cxg.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Case Study: CELLxGENE Ontologies","text":"","code":"sessionInfo() #> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] cellxgenedp_1.4.1 OLSr_0.0.3        dplyr_1.1.4       BiocStyle_2.28.1  #>  #> loaded via a namespace (and not attached): #>  [1] rappdirs_0.3.3       sass_0.4.7           utf8_1.2.4           #>  [4] generics_0.1.3       tidyr_1.3.0          stringi_1.8.2        #>  [7] digest_0.6.33        magrittr_2.0.3       evaluate_0.23        #> [10] bookdown_0.36        fastmap_1.1.1        rprojroot_2.0.4      #> [13] jsonlite_1.8.7       promises_1.2.1       BiocManager_1.30.22  #> [16] httr_1.4.7           purrr_1.0.2          fansi_1.0.5          #> [19] httr2_1.0.0          textshaping_0.3.7    jquerylib_0.1.4      #> [22] cli_3.6.1            shiny_1.8.0          rlang_1.1.2          #> [25] visNetwork_2.1.2     ellipsis_0.3.2       withr_2.5.2          #> [28] cachem_1.0.8         yaml_2.3.7           BiocBaseUtils_1.2.0  #> [31] tools_4.3.2          memoise_2.0.1        httpuv_1.6.12        #> [34] DT_0.30              curl_5.1.0           mime_0.12            #> [37] vctrs_0.6.4          rjsoncons_1.0.0.9200 R6_2.5.1             #> [40] lifecycle_1.0.4      stringr_1.5.1        fs_1.6.3             #> [43] htmlwidgets_1.6.3    ragg_1.2.6           pkgconfig_2.0.3      #> [46] desc_1.4.2           later_1.3.1          pkgdown_2.0.7        #> [49] pillar_1.9.0         bslib_0.6.1          Rcpp_1.0.11          #> [52] glue_1.6.2           systemfonts_1.0.5    xfun_0.41            #> [55] tibble_3.2.1         tidyselect_1.2.0     knitr_1.45           #> [58] xtable_1.8-4         igraph_1.5.1         htmltools_0.5.7      #> [61] rmarkdown_2.25       compiler_4.3.2"},{"path":"https://mtmorgan.github.io/OLSr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer. Chan Zuckerberg Initiative DAF CZF2019-002443. Funder. NIH NCI ITCR U24CA180996. Funder.","code":""},{"path":"https://mtmorgan.github.io/OLSr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2023). OLSr: Retrieving Information 'EBI' Ontology Lookup Service ('OLS'). R package version 0.0.3, https://mtmorgan.github.io/OLSr/.","code":"@Manual{,   title = {OLSr: Retrieving Information from the 'EBI' Ontology Lookup Service ('OLS')},   author = {Martin Morgan},   year = {2023},   note = {R package version 0.0.3},   url = {https://mtmorgan.github.io/OLSr/}, }"},{"path":"https://mtmorgan.github.io/OLSr/index.html","id":"olsr","dir":"","previous_headings":"","what":"Retrieving Information from the EBI Ontology Lookup Service (OLS)","title":"Retrieving Information from the EBI Ontology Lookup Service (OLS)","text":"Ontology Lookup Service (OLS) repository biomedical ontologies provided European Bioinformatics Institute (‘EMBL-EBI’). OLSr provides interface service, allowing discovery ontologies, terms, relations. Results presented ‘tidy’ framework, manipulation tasks easily accomplished verbs ‘filter()’, ‘select()’, ‘mutate()’. effort made integrate packages useful comprehensive biological ontological analysis.","code":""},{"path":"https://mtmorgan.github.io/OLSr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieving Information from the EBI Ontology Lookup Service (OLS)","text":"Install development version OLSr Attach installed package R session ","code":"if (!\"remotes\" in rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://cran.r-project.org\") devtools::install_github(\"mtmorgan/OLSr\") library(OLSr)"},{"path":"https://mtmorgan.github.io/OLSr/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Retrieving Information from the EBI Ontology Lookup Service (OLS)","text":"introductory vignette outlines common use cases, including Discovering ontologies available OLS. Retrieving terms within ontology Retrieving relatives (parents, ancestors, children, descendents) terms. CELLxGENE case study vignette outlines ontology representation graphs, manipulation visualization using igraph, visNetwork R packages. OLSr uses cache minimize number calls OLS; introductory vignette includes short section discussing cache management.","code":""},{"path":"https://mtmorgan.github.io/OLSr/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Retrieving Information from the EBI Ontology Lookup Service (OLS)","text":"See introductory vignette next steps.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":null,"dir":"Reference","previous_headings":"","what":"OLSr Cache Management — cache_directory","title":"OLSr Cache Management — cache_directory","text":"cache_directory() returns -disk location cache used OLSr. cache_summary() reports number size files cache, oldest file, etc. cache_info() reports information file cache. cache() returns object can used cache management.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OLSr Cache Management — cache_directory","text":"","code":"cache_directory()  cache_summary()  cache_info()  cache()  # S3 method for cache_summary print(x, ...)"},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OLSr Cache Management — cache_directory","text":"x print.cache_summary(), object returned `cache_summary(). ... ignored print.cache_summary().","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OLSr Cache Management — cache_directory","text":"cache_directory() returns character(1) path location cache disk. cache_summary() returns list following elements: directory: location cache, .e., cache_directory(). n_files: number files cache. cache_size: sum file sizes cache. largest_file, largest_size: largest file size cache. oldest_file, oldest_age: name age (difftime object) oldest (based ctime) file path. least_used_file, least_used_age: name age file modified least recently, based mtime. print.cache_summary() displays information readable way. cache_info() returns tibble columns summarizing file: file name cache entry. hash, based function signature, cached object. easily possible associate individual calls R file names. size size bytes cached object. mtime, ctime, atime: modification, creation last-access time file. cache() returns object defined cachem package.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OLSr Cache Management — cache_directory","text":"OLSr uses -disk cache improve performance reliability. query OLS server cached first use, subsequent responses can read local disk. greatly increases performance, allows use previously retrieved resources -line. risk using cache cache contains 'old' version response. Circumvent risk manually manipulating cache, e.g., removing objects known old. OLSr uses memoise https://CRAN.R-project.org/package=memoise cachem https://CRAN.R-project.org/package=cachem packages implement cache. disk cache implemented using cachem's cache_disk() function using default cache size (1 Gb) \"lsu\" ('least recently used') eviction policy. Objects remain cache 30 days. cache created package-specific directory, located cache_directory(). See help page ?cache_disk information using object returned cache().","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OLSr Cache Management — cache_directory","text":"","code":"cache_directory() #> [1] \"/home/runner/.cache/R/OLSr\"  cache_summary() #> cache directory: /home/runner/.cache/R/OLSr #> number of files: 0 #> total cache size: 0 bytes #> largest file: 0 B  #> oldest file: 0 secs  #> least used file: 0 secs    cache_info() #> # A tibble: 0 × 11 #> # ℹ 11 variables: file <chr>, size <dbl>, isdir <lgl>, mode <octmode>, #> #   mtime <dttm>, ctime <dttm>, atime <dttm>, uid <int>, gid <int>, #> #   uname <chr>, grname <chr>  ## cache objects created in the last 24 hours cache_info() |>     filter(mtime > Sys.time() - 24 * 60 * 60) #> # A tibble: 0 × 11 #> # ℹ 11 variables: file <chr>, size <dbl>, isdir <lgl>, mode <octmode>, #> #   mtime <dttm>, ctime <dttm>, atime <dttm>, uid <int>, gid <int>, #> #   uname <chr>, grname <chr>  if (FALSE) { ## remove the most recently modified object, forcing this to be recreated file_name <-     cache_info() |>     arrange(desc(mtime)) |>     slice(1) |>     pull(file) unlink(file.path(cache_directory(), file_name)) }  cache() #> <cache_disk> <cachem> #>   Methods: #>     get(key, missing = missing_) #>     set(key, value) #>     exists(key) #>     keys() #>     remove(key) #>     reset() #>     prune() #>     size() #>     destroy() #>     is_destroyed(throw = FALSE) #>     info()"},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"get_ontologies() queries OLS information available ontologies. get_ontology() retrieves information single ontology. get_roots() get_terms() return 'roots' terms ontology. get_term() returns tibble detailed information single term. get_parents(), get_ancestors(), get_children(), get_descendants() retrieve parents, ancestors, children descedants single term.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"","code":"get_ontologies()  get_ontology(ontology)  get_roots(ontology)  get_terms(ontology, all_ontologies = FALSE)  get_term(ontology, id, form = c(\"id\", \"obo_id\", \"short_form\", \"iri\"))  get_parents(ontology, id, all_ontologies = FALSE)  get_ancestors(ontology, id, all_ontologies = FALSE)  get_children(ontology, id, all_ontologies = FALSE)  get_descendants(ontology, id, all_ontologies = FALSE)"},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"ontology character(1) id (get_ontologies()) ontology interst. all_ontologies logical(1) FALSE (default), terms, parents, etc., defined ontology returned. TRUE, terms ontologies associated terms ontology returned. id character(1) term identifier, usually 'obo_id' (e.g., \"CL:0002494\") get_term() specified form. form character(1) form identifier, describe Details.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"get_*() functions return tibbles summarizing information retrieved OLS. meaning individual columns service; columns renamed, re-ordered prioritize useful information.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"functions documented page provide programmatic interface EMBL-EBI Ontology Lookup Service https://www.ebi.ac.uk/ols4/. API described https://www.ebi.ac.uk/ols4/help functions use -disk cache results retrieved internet speed interactive analysis. Generally, initial queries 'slow', subsequent identical queries fast. Details cache, edge cases cache can get way current results, strategies cache management summarized 'Cache Management' section vignette. attempt simplify navigation results, values returned API calls presented tibble invariant columns removed. Data returned OLS often hierarchical, resulting list columns tibble. cases (e.g., get_ontologies()) list columns un-nested (using tidyr::unnest_wider()) provide users relevant information. Downstream processing steps may also find beneficial understand 'tidy' approaches working hierarchical data tibbles, outlined chapter 23 'R Data Science' (2e), https://r4ds.hadley.nz/rectangling. illustrated \"Hierarchical Data\" section vignette. get_term(), identifier id can one three forms. id obo_id forms synonyms follow pattern ontology abbrevation, :, term id, e.g., \"CL:0002494\". short_form typically like obo_id : replaced _. iri purl resource locator, typically \"http://purl.obolibrary.org/...\". relatives found, get_parents() etc. return tibble 0 rows (sometimes 0 columns).","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Ontologies, Terms, and their Relatives — get_ontologies","text":"","code":"onto <- get_ontologies() onto #> # A tibble: 250 × 31 #>    id        title          description version numberOfTerms numberOfProperties #>    <chr>     <chr>          <chr>       <chr>           <int>              <int> #>  1 ado       Alzheimer's D… Alzheimer'… 2.0.1            1963                186 #>  2 agro      Agronomy Onto… AgrO is an… NA               4162                293 #>  3 aism      Ontology for … The ontolo… 2023-0…          7443                547 #>  4 amphx     Amphioxus Dev… An ontolog… NA                403                 10 #>  5 apo       Ascomycete Ph… A structur… 2023-1…           619                 27 #>  6 apollo_sv Apollo Struct… An OWL2 on… 2023-0…          1691                366 #>  7 aro       Antibiotic Re… Antibiotic… NA               7105                 25 #>  8 bco       Biological Co… An ontolog… 2021-1…           253                472 #>  9 bfo       Basic Formal … The upper … NA                 35                 22 #> 10 bspo      Biological Sp… An ontolog… 2023-0…           169                236 #> # ℹ 240 more rows #> # ℹ 25 more variables: numberOfIndividuals <int>, languages <list>, #> #   loaded <chr>, updated <chr>, versionIri <chr>, namespace <chr>, #> #   preferredPrefix <chr>, homepage <chr>, mailingList <chr>, tracker <chr>, #> #   logo <lgl>, creators <lgl>, annotations <lgl>, fileLocation <chr>, #> #   oboSlims <lgl>, labelProperty <chr>, definitionProperties <list>, #> #   synonymProperties <list>, hierarchicalProperties <list>, baseUris <list>, …   get_ontology(\"cl\") |>     glimpse() #> Rows: 1 #> Columns: 16 #> $ languages           <list> \"en\" #> $ lang                <chr> \"en\" #> $ ontologyId          <chr> \"cl\" #> $ loaded              <chr> \"2023-11-30T14:00:19.698341744\" #> $ updated             <chr> \"2023-11-30T14:00:19.698341744\" #> $ status              <chr> \"LOADED\" #> $ message             <chr> \"\" #> $ version             <chr> \"2023-10-19\" #> $ fileHash            <lgl> NA #> $ loadAttempts        <int> 0 #> $ numberOfTerms       <int> 16147 #> $ numberOfProperties  <int> 531 #> $ numberOfIndividuals <int> 18 #> $ config              <list> \"cl\" #> $ baseUris            <list> <NULL> #> $ `_links`            <list> [\"https://www.ebi.ac.uk/ols4/api/ontologies/cl?la…  get_roots(\"cl\") #> # A tibble: 130 × 13 #>    obo_id  label description iri   synonyms annotation   has_children short_form #>    <chr>   <chr> <chr>       <chr> <list>   <list>       <lgl>        <chr>      #>  1 GO:001… regu… Any proces… http… <NULL>   <named list> TRUE         GO_0010817 #>  2 GO:005… regu… Any proces… http… <NULL>   <named list> TRUE         GO_0050803 #>  3 GO:005… regu… Any proces… http… <NULL>   <named list> TRUE         GO_0050878 #>  4 GO:009… cell… Any proces… http… <NULL>   <named list> TRUE         GO_0097237 #>  5 NCBITa… root  NA          http… <list>   <named list> TRUE         NCBITaxon… #>  6 UBERON… proc… An occurre… http… <NULL>   <named list> TRUE         UBERON_00… #>  7 UBERON… anat… Biological… http… <NULL>   <named list> TRUE         UBERON_00… #>  8 BFO:00… cont… An entity … http… <NULL>   <NULL>       TRUE         BFO_00000… #>  9 BFO:00… occu… An entity … http… <NULL>   <NULL>       TRUE         BFO_00000… #> 10 CARO:0… CARO… NA          http… <NULL>   <NULL>       TRUE         CARO_0000… #> # ℹ 120 more rows #> # ℹ 5 more variables: in_subset <list>, obo_definition_citation <list>, #> #   obo_xref <list>, obo_synonym <list>, `_links` <list>  terms <- get_terms(\"cl\") #> Querying OLS ■■                                 3% | ETA:  2m #> Querying OLS ■■■■                               9% | ETA:  1m #> Querying OLS ■■■■■■                            15% | ETA:  1m #> Querying OLS ■■■■■■                            18% | ETA:  1m #> Querying OLS ■■■■■■■■                          24% | ETA:  1m #> Querying OLS ■■■■■■■■■■                        30% | ETA: 45s #> Querying OLS ■■■■■■■■■■■■                      36% | ETA: 40s #> Querying OLS ■■■■■■■■■■■■■                     39% | ETA: 38s #> Querying OLS ■■■■■■■■■■■■■■■                   45% | ETA: 35s #> Querying OLS ■■■■■■■■■■■■■■■■                  48% | ETA: 33s #> Querying OLS ■■■■■■■■■■■■■■■■                  52% | ETA: 32s #> Querying OLS ■■■■■■■■■■■■■■■■■■                58% | ETA: 29s #> Querying OLS ■■■■■■■■■■■■■■■■■■■               61% | ETA: 27s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■              64% | ETA: 25s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■             67% | ETA: 23s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■            70% | ETA: 21s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■           73% | ETA: 20s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■          76% | ETA: 19s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■         79% | ETA: 17s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% | ETA: 15s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■        85% | ETA: 13s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■■       88% | ETA: 11s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% | ETA:  8s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     94% | ETA:  5s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■    97% | ETA:  3s #> Querying OLS ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s terms #> # A tibble: 2,734 × 13 #>    label  obo_id description iri   synonyms annotation   has_children short_form #>    <chr>  <chr>  <chr>       <chr> <list>   <list>       <lgl>        <chr>      #>  1 adren… CL:00… NA          http… <NULL>   <named list> FALSE        CL_0000109 #>  2 pepti… CL:00… A neuron t… http… <NULL>   <named list> FALSE        CL_0000110 #>  3 colum… CL:00… NA          http… <list>   <NULL>       FALSE        CL_0000112 #>  4 monon… CL:00… A vertebra… http… <NULL>   <named list> FALSE        CL_0000113 #>  5 surfa… CL:00… NA          http… <list>   <named list> FALSE        CL_0000114 #>  6 endot… CL:00… An endothe… http… <list>   <named list> TRUE         CL_0000115 #>  7 pione… CL:00… Pioneer ne… http… <NULL>   <named list> FALSE        CL_0000116 #>  8 CNS n… CL:00… NA          http… <NULL>   <NULL>       TRUE         CL_0000117 #>  9 baske… CL:00… Basket cel… http… <NULL>   <named list> TRUE         CL_0000118 #> 10 cereb… CL:00… Large intr… http… <list>   <named list> FALSE        CL_0000119 #> # ℹ 2,724 more rows #> # ℹ 5 more variables: in_subset <list>, obo_definition_citation <list>, #> #   obo_xref <list>, obo_synonym <list>, `_links` <list>  CL0002494 <- get_term(\"cl\", \"CL:0002494\") CL0002494 |>     glimpse() #> Rows: 1 #> Columns: 22 #> $ obo_id                  <chr> \"CL:0002494\" #> $ label                   <chr> \"cardiocyte\" #> $ description             <chr> \"A cell located in the heart, including both m… #> $ iri                     <chr> \"http://purl.obolibrary.org/obo/CL_0002494\" #> $ lang                    <chr> \"en\" #> $ synonyms                <list> [\"heart cell\"] #> $ annotation              <list> [[\"https://orcid.org/0000-0003-1980-3228\"], [\"… #> $ ontology_name           <chr> \"cl\" #> $ ontology_prefix         <chr> \"CL\" #> $ ontology_iri            <chr> \"http://purl.obolibrary.org/obo/cl.owl\" #> $ is_obsolete             <lgl> FALSE #> $ term_replaced_by        <lgl> NA #> $ is_defining_ontology    <lgl> TRUE #> $ has_children            <lgl> TRUE #> $ is_root                 <lgl> FALSE #> $ short_form              <chr> \"CL_0002494\" #> $ in_subset               <lgl> NA #> $ obo_definition_citation <list> [[\"A cell located in the heart, including both… #> $ obo_xref                <list> [[\"BTO\", \"0001539\", <NULL>, \"http://purl.oboli… #> $ obo_synonym             <lgl> NA #> $ is_preferred_root       <lgl> FALSE #> $ `_links`                <list> [[\"https://www.ebi.ac.uk/ols4/api/ontologies/c…  get_parents(\"cl\", \"CL:0002350\") #> # A tibble: 1 × 14 #>   obo_id     label  description iri   synonyms annotation   has_children is_root #>   <chr>      <chr>  <chr>       <chr> <lgl>    <list>       <lgl>        <lgl>   #> 1 CL:0010008 cardi… NA          http… NA       <named list> TRUE         FALSE   #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <lgl>, obo_xref <lgl>, obo_synonym <lgl>, #> #   `_links` <list>  get_ancestors(\"cl\", \"CL:0002494\") #> # A tibble: 1 × 14 #>   obo_id     label description  iri   synonyms annotation   has_children is_root #>   <chr>      <chr> <chr>        <chr> <list>   <list>       <lgl>        <lgl>   #> 1 CL:0000000 cell  A material … http… <NULL>   <named list> TRUE         FALSE   #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list> get_ancestors(\"cl\", \"CL:0002350\") #> # A tibble: 8 × 14 #>   obo_id     label  description iri   synonyms annotation   has_children is_root #>   <chr>      <chr>  <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #> 1 CL:0010008 cardi… NA          http… <NULL>   <named list> TRUE         FALSE   #> 2 CL:0000115 endot… An endothe… http… <list>   <named list> TRUE         FALSE   #> 3 CL:0000213 linin… A cell wit… http… <list>   <NULL>       TRUE         FALSE   #> 4 CL:0000215 barri… A cell who… http… <NULL>   <NULL>       TRUE         FALSE   #> 5 CL:0000000 cell   A material… http… <NULL>   <named list> TRUE         FALSE   #> 6 CL:0002078 meso-… Epithelial… http… <list>   <named list> TRUE         FALSE   #> 7 CL:0000066 epith… A cell tha… http… <list>   <named list> TRUE         FALSE   #> 8 CL:0002494 cardi… A cell loc… http… <list>   <named list> TRUE         FALSE   #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list>  get_children(\"cl\", \"CL:0002494\") #> # A tibble: 12 × 14 #>    obo_id     label description iri   synonyms annotation   has_children is_root #>    <chr>      <chr> <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #>  1 CL:2000022 card… Any native… http… <NULL>   <named list> TRUE         FALSE   #>  2 CL:1000147 card… A cell tha… http… <list>   <NULL>       TRUE         FALSE   #>  3 CL:0011019 meso… A mesothel… http… <NULL>   <named list> FALSE        FALSE   #>  4 CL:0010020 card… NA          http… <NULL>   <NULL>       FALSE        FALSE   #>  5 CL:0010008 card… NA          http… <NULL>   <named list> TRUE         FALSE   #>  6 CL:0010007 His-… NA          http… <NULL>   <NULL>       TRUE         FALSE   #>  7 CL:0008022 endo… A mesenchy… http… <NULL>   <NULL>       FALSE        FALSE   #>  8 CL:0002592 smoo… A smooth m… http… <NULL>   <named list> FALSE        FALSE   #>  9 CL:0002548 fibr… A fibrobla… http… <list>   <named list> TRUE         FALSE   #> 10 CL:0000746 card… Cardiac mu… http… <list>   <named list> TRUE         FALSE   #> 11 CL:0000513 card… A precurso… http… <list>   <named list> FALSE        FALSE   #> 12 CL:1000309 epic… A fat cell… http… <list>   <named list> TRUE         FALSE   #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list> get_children(\"cl\", \"CL:0002350\")    # no children, 0 x 0 tibble #> # A tibble: 0 × 0  get_descendants(\"cl\", \"CL:0002494\") #> # A tibble: 68 × 14 #>    obo_id     label description iri   synonyms annotation   has_children is_root #>    <chr>      <chr> <chr>       <chr> <list>   <list>       <lgl>        <lgl>   #>  1 CL:1000309 epic… A fat cell… http… <list>   <named list> TRUE         FALSE   #>  2 CL:1000310 adip… A fat cell… http… <list>   <named list> FALSE        FALSE   #>  3 CL:1000311 adip… A fat cell… http… <list>   <named list> FALSE        FALSE   #>  4 CL:0000513 card… A precurso… http… <list>   <named list> FALSE        FALSE   #>  5 CL:0000746 card… Cardiac mu… http… <list>   <named list> TRUE         FALSE   #>  6 CL:0000193 card… A striated… http… <NULL>   <NULL>       FALSE        FALSE   #>  7 CL:0002086 spec… A cardiac … http… <NULL>   <named list> TRUE         FALSE   #>  8 CL:0002068 Purk… Specialize… http… <list>   <named list> TRUE         FALSE   #>  9 CL:1000483 Purk… A Purkinje… http… <NULL>   <named list> FALSE        FALSE   #> 10 CL:1000484 Purk… A Purkinje… http… <NULL>   <named list> FALSE        FALSE   #> # ℹ 58 more rows #> # ℹ 6 more variables: short_form <chr>, in_subset <list>, #> #   obo_definition_citation <list>, obo_xref <list>, obo_synonym <list>, #> #   `_links` <list> get_descendants(\"cl\", \"CL:0002350\") # no descedants, 0 x 0 tibble #> # A tibble: 0 × 0"},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Ancestor and Descendant Term Graphs — get_ancestors_graph","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"get_ancestors_graph() get_descendants_graph() returns graph representation ancestors descendants term identifiers interest. olsr_graph() constructs olsr_graph R objects. olsr_graph_edges(), olsr_graph_nodes(), olsr_graph_ontology(), olsr_graph_ids() extract elements olsr_graph. olsr_graph_as_visNetwork() converts olsr_graph format used visNetwork package interactive visualization. olsr_graph_as_igraph() igraph_as_olsr_graph() transform olsr_graph objects igraph objects.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"","code":"get_ancestors_graph(ontology, ids, terms = NULL)  get_descendants_graph(ontology, ids, terms = NULL)  olsr_graph(relation, ontology, ids, edges, nodes)  olsr_graph_ontology(x)  olsr_graph_ids(x)  olsr_graph_nodes(x)  olsr_graph_edges(x)  olsr_graph_as_visNetwork(graph)  olsr_graph_as_igraph(graph)  igraph_as_olsr_graph(igraph)  # S3 method for olsr_graph print(x, ...)"},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"ontology character(1) name ontology; must present id column `get_ontologies(). ids character() identifiers used construct graph. terms tibble , e.g., terms(), containing column obo_id additional columns annotated nodes returned graph. relation character(1) type graph, either \"ancestors\" \"descendants\". edges tibble() columns , containing OBO identifiers start end node graph. nodes tibble() column obo_id, one node graph. Arbitrary additional columns allowed. x print.olsr_graph(), object class olsr_graph. graph olsr_graph object. igraph object class igraph, igraph package. ... print.olsr_graph(), ignored.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"get_ancestors_graph() get_descendants_graph() return olsr_graph object recording ontology, ids, edges, nodes implied ancestor descendant graph. Nodes annotated information terms, available. olsr_graph() returns object class olsr_graph. olsr_graph_as_visNetwork() returns object created call visNetwork::visNetwork(). object can used simple interactive visualization directly, input subsequent visNetwork formatting. olsr_graph_as_igraph() returns igraph object; igraph_as_olsr_graph() returns olsr_graph object.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"Ancestor descendant graphs navigate ids interest via parents children, recursively, either ontology root leaf nodes remain. descendant graphs, can involve hundreds even thousands calls OLS API, can time consuming (e.g., minute ) first invocation. API calls memoized, fast subsequent invocations. olsr_graph() provides simple representation coordinate information ancestor descendant graphs. main purpose class 'way-point' analysis graph, e.g., using igraph package https://CRAN.R-project.org/package=igraph analytic work visNetwork https://CRAN.R-project.org/package=visNetwork interactive visualization. olsr_graph_as_visNetwork() renames obo_id column nodes id, consistent visNetwork. id column copied title, used mouse-text; label (short description term tibble returned terms()) used label node graph. Add column color nodes color individual nodes olsr_graph_as_igraph() includes information relation (ancestors descendants), ontology, ids igraph object graph-level attribute available graph_attr(ig, \"olsr_graph\"). Workflows use olsr_graph_as_igraph(), perform igraph manipulations, use igraph_as_olsr_graph() generally preserve information.","code":""},{"path":"https://mtmorgan.github.io/OLSr/reference/olsr_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ancestor and Descendant Term Graphs — get_ancestors_graph","text":"","code":"cl <- get_terms(\"cl\") b_cell <- \"CL:0000236\" anc <- get_ancestors_graph(\"cl\", b_cell, cl)     # 11 nodes #> 0 relatives visited; 1 in queue #> 10 relatives visited; 3 in queue #> 13 relatives visited; 2 in queue #> 20 relatives visited; 0 in queue anc #> class: ancestors_graph (21 nodes x 24 edges) #> ontology: cl #> ids (1): CL:0000236  desc <- get_descendants_graph(\"cl\", b_cell, cl)  # 64 nodes #> 0 relatives visited; 1 in queue #> 21 relatives visited; 13 in queue #> 27 relatives visited; 10 in queue #> 38 relatives visited; 7 in queue #> 53 relatives visited; 10 in queue #> 63 relatives visited; 6 in queue desc #> class: descendants_graph (64 nodes x 66 edges) #> ontology: cl #> ids (1): CL:0000236  olsr_graph_ontology(anc) #> [1] \"cl\" olsr_graph_ids(anc) #> [1] \"CL:0000236\" olsr_graph_nodes(anc) #> # A tibble: 21 × 13 #>    obo_id  label description iri   synonyms annotation   has_children short_form #>    <chr>   <chr> <chr>       <chr> <list>   <list>       <lgl>        <chr>      #>  1 CL:000… B ce… A lymphocy… http… <list>   <named list> TRUE         CL_0000236 #>  2 CL:000… lymp… A lymphocy… http… <NULL>   <named list> TRUE         CL_0000945 #>  3 CL:000… lymp… A lymphocy… http… <NULL>   <named list> TRUE         CL_0000542 #>  4 CL:000… mono… A leukocyt… http… <list>   <named list> TRUE         CL_0000842 #>  5 CL:000… leuk… An achroma… http… <list>   <named list> TRUE         CL_0000738 #>  6 CL:000… sing… A cell wit… http… <NULL>   <NULL>       TRUE         CL_0000226 #>  7 CL:000… nucl… A cell con… http… <NULL>   <named list> TRUE         CL_0002242 #>  8 CL:000… hema… A cell of … http… <list>   <named list> TRUE         CL_0000988 #>  9 CL:000… moti… A cell tha… http… <NULL>   <NULL>       TRUE         CL_0000219 #> 10 CL:000… NA    NA          NA    <NULL>   <NULL>       NA           NA         #> # ℹ 11 more rows #> # ℹ 5 more variables: in_subset <list>, obo_definition_citation <list>, #> #   obo_xref <list>, obo_synonym <list>, `_links` <list> olsr_graph_edges(anc) #> # A tibble: 24 × 2 #>    from       to         #>    <chr>      <chr>      #>  1 CL:0000236 CL:0000945 #>  2 CL:0000945 CL:0000542 #>  3 CL:0000542 CL:0000842 #>  4 CL:0000842 CL:0000738 #>  5 CL:0000842 CL:0000226 #>  6 CL:0000738 CL:0002242 #>  7 CL:0000738 CL:0000988 #>  8 CL:0000738 CL:0000219 #>  9 CL:0000226 CL:0002242 #> 10 CL:0002242 CL:0000003 #> # ℹ 14 more rows  vis <- olsr_graph_as_visNetwork(anc) if (interactive())   # visualize in RStudio  or browser     vis  ig <- olsr_graph_as_igraph(anc) ig #> IGRAPH 0bea8ed DN-- 21 24 --  #> + attr: olsr_graph (g/x), name (v/c), label (v/c), description (v/c), #> | iri (v/c), synonyms (v/x), annotation (v/x), has_children (v/l), #> | short_form (v/c), in_subset (v/x), obo_definition_citation (v/x), #> | obo_xref (v/x), obo_synonym (v/x), _links (v/x) #> + edges from 0bea8ed (vertex names): #>  [1] CL:0000236->CL:0000945 CL:0000945->CL:0000542 CL:0000542->CL:0000842 #>  [4] CL:0000842->CL:0000738 CL:0000842->CL:0000226 CL:0000738->CL:0002242 #>  [7] CL:0000738->CL:0000988 CL:0000738->CL:0000219 CL:0000226->CL:0002242 #> [10] CL:0002242->CL:0000003 CL:0000988->CL:0002371 CL:0000219->CL:0000003 #> [13] CL:0000003->CL:0000000 CL:0002371->CL:0000548 #> + ... omitted several edges igraph_as_olsr_graph(ig) #> class: ancestors_graph (21 nodes x 24 edges) #> ontology: cl #> ids (1): CL:0000236"},{"path":"https://mtmorgan.github.io/OLSr/news/index.html","id":"olsr-002","dir":"Changelog","previous_headings":"","what":"OLSr 0.0.2","title":"OLSr 0.0.2","text":"(0.0.2) Add ancestors / descendants graphs CELLxGENE case study.","code":""},{"path":"https://mtmorgan.github.io/OLSr/news/index.html","id":"olsr-001","dir":"Changelog","previous_headings":"","what":"OLSr 0.0.1","title":"OLSr 0.0.1","text":"(0.0.1) Initial version, ontology, term, relative retrieval, documentation, vignettes, README, NEWS, associated pkgdown site.","code":""}]
